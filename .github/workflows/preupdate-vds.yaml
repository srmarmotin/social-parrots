name: Package Pre Updater For VDS
on:
    #schedule:
    #- cron: '0 0 * * *'  # Runs daily at midnight
    workflow_dispatch:
env:
    #Define packages and branch where updates will be made
    VDS_PACKAGES: '@inertiajs/react @types/react'
    TARGET_BRANCH: 'feature/PPIWEB-0000-update-vds'
    CHORE_DESCRIPTION: 'chore(PPIWEB-0000): Update vds package'

jobs:
    update-vds:
        runs-on: ubuntu-latest
        strategy:
            #Matrix allows running the job for multiple apps
            matrix:
                apps: ['apps/account', 'packagez/tn-foundation']
        permissions:
            contents: write
            pull-requests: write
        steps:
            - name: Checkout repo
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 22.14.0

            - name: Get latest versions and check outdated packages
              id: check-outdated
              run: |
                  outdated=""
                  packages_path="./${{ matrix.apps }}/package.json"

                  # Check if the package.json file exists before continue
                  if [ ! -f "$packages_path" ]; then
                    echo "package.json not found at $packages_path. skipping..."
                    exit 0
                  fi

                  tmp_file="$packages_path.tmp"
                  cp "$packages_path" "$tmp_file"

                  for pkg in $VDS_PACKAGES; do
                    latest=$(npm view $pkg version)
                    current=$(jq -r ".dependencies[\"$pkg\"]" "$packages_path")
                    
                    if [ -n "$current" ] && [ "$current" != "null" ] && [ "$current" != "$latest" ]; then
                      echo "$pkg is outdated: $current --> $latest"
                      jq --arg pkg "$pkg" --arg version "$latest" '
                      if .dependencies[$pkg] then .dependencies[$pkg] = $version else . end
                      ' "$tmp_file" > "$tmp_file.new" && mv "$tmp_file.new" "$tmp_file"
                      outdated="true"
                    fi
                  done

                  mv "$tmp_file" "$packages_path"
                  echo "outdated=$outdated" >> $GITHUB_OUTPUT

            - name: Install dependencies
              uses: pnpm/action-setup@v4
              with:
                  version: 10.11.0
                  run_install: false

            - name: Install updated dependencies
              if: steps.check-outdated.outputs.outdated == 'true'
              run: |
                  pnpm install --no-frozen-lockfile

            - name: Check for existing PR
              id: check_pr
              uses: actions/github-script@v7
              with:
                  script: |
                      const app_branch = `${process.env.TARGET_BRANCH}-${{ matrix.apps }}`;
                      const chore_description = `${process.env.CHORE_DESCRIPTION} ${{ matrix.apps }}`;
                      const { data: pulls } = await github.rest.pulls.list({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        state: 'open',
                        head: `${context.repo.owner}:${app_branch}`
                      });

                      const exists = pulls.some(pr => pr.title === chore_description);
                      core.setOutput("pr_exists", exists.toString());

                      app_name = `${{ matrix.apps }}`.split('/')[1];
                      core.setOutput("app_name", app_name);

                      fi_name = `${{ matrix.apps }}`.startsWith('apps/') ? app_name : 'appshell';
                      core.setOutput("fi_name", fi_name);

            - name: Create PR if outdated
              if: ${{ steps.check-outdated.outputs.outdated }} == 'true' && ${{ steps.check_pr.outputs.pr_exists }} == 'false'
              uses: peter-evans/create-pull-request@v5
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  branch: ${{ env.TARGET_BRANCH }}-${{ steps.check_pr.outputs.app_name }}
                  commit-message: ${{env.CHORE_DESCRIPTION}} ${{ matrix.apps }}
                  title: ${{ env.CHORE_DESCRIPTION}} ${{ steps.check_pr.outputs.app_name }}
                  body: |
                      This PR updates the following avia to it latest version for ${{ steps.check_pr.outputs.app_name }}
                      ### Feature Instance
                      https://web-mf-${{ steps.check_pr.outputs.fi_name }}-ppiweb-0000.shared.branch.paramountplus.com/
